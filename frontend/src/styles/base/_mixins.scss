@use "sass:math";
@use './variables' as *;
@use 'sass:map';

$rem-base: 16px;

@function strip-unit($num) {
  @return math.div($num, ($num * 0 + 1));
}

@function convert-to-rem($value, $base-value: $rem-base) {
  $value: math.div(strip-unit($value), strip-unit($base-value)) * 1rem;

  @if ($value==0rem) {
    $value: 0;
  }

  // Turn 0rem into 0
  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max==1 {
    @return convert-to-rem(nth($values, 1), $base-value);
  }

  $remValues: ();

  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }

  @return $remValues;
}

@mixin breakpoint($breakpoint) {
  @if map.has-key(variables.$breakpoints, $breakpoint) {
    @media (min-width: map.get(variables.$breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "No value for breakpoint: #{$breakpoint}";
  }
}

@function get-container-columns($breakpoint) {
  @return map-get($container-columns, $breakpoint);
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin btn-base {
  font-family: $secondary-font-bold;
  font-weight: 400;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  border: none;
  cursor: pointer;
  display: inline-block;
  transition: background-color 0.2s ease, color 0.2s ease;
  text-align: center;
  text-transform: uppercase;
}

